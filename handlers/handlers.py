# -*- coding: utf-8 -*-
import random
import re

from aiogram.filters import CommandStart
from aiogram.types import Message
from loguru import logger
from telethon import TelegramClient
from telethon.tl.functions.channels import JoinChannelRequest

from system.dispatcher import bot, dp

API_ID = 12345
API_HASH = "0123456789abcdef0123456789abcdef"
SESSION_NAME = "session_name"


@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    logger.info(
        f"{message.from_user.id} {message.from_user.username} {message.from_user.first_name} "
        f"{message.from_user.last_name} {message.date.strftime('%Y-%m-%d %H:%M:%S')}"
    )
    await bot.send_message(message.from_user.id, "–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –≤ Telegram", disable_web_page_preview=True)


async def parse_telegram_link(link: str):
    """
    –†–∞–∑–±–æ—Ä —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ—Å—Ç –≤ Telegram.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç username/—Å—Å—ã–ª–∫—É –∫–∞–Ω–∞–ª–∞ –∏ ID –ø–æ—Å—Ç–∞.
    """
    # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤:
    # https://t.me/channel/123
    # https://t.me/+invite_link
    pattern = r"(?:https?://)?t\.me/([\w\d_+-]+)/(\d+)"
    match = re.match(pattern, link)
    if match:
        channel_username = match.group(1)
        post_id = int(match.group(2))
        return channel_username, post_id
    return None, None


async def get_random_commenter(channel_username, post_id):
    """–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –∏ –≤—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–∞"""
    async with TelegramClient(f"setting/account/{SESSION_NAME}", API_ID, API_HASH) as client:
        await client.connect()

        logger.info(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –∞–∫–∫–∞—É–Ω—Ç—É Telegram —Å –∏–º–µ–Ω–µ–º —Å–µ–∞–Ω—Å–∞ {SESSION_NAME}")

        # –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
        try:
            await client(JoinChannelRequest(channel_username))
            logger.info(f"–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª {channel_username} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª: {e}")

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        commenters = []
        async for msg in client.iter_messages(channel_username, reply_to=post_id, reverse=True):
            sender_id = msg.from_id.user_id if msg.from_id else None
            username = msg.sender.username if msg.sender else None
            if sender_id:
                commenters.append((sender_id, username))
                logger.info(f"–ü–æ–ª—É—á–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä: {sender_id}, @{username}")

        await client.disconnect()

    return random.choice(commenters) if commenters else None


@dp.message()
async def handle_post_link(message: Message):
    """–ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É, –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∏ –≤—ã–±–∏—Ä–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–∞"""
    link = message.text.strip()
    channel_username, post_id = await parse_telegram_link(link)

    if not channel_username or not post_id:
        await message.reply("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞. –ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ https://t.me/channel/123")
        return

    random_commenter = await get_random_commenter(channel_username, post_id)
    if random_commenter:
        user_id, username = random_commenter
        await message.reply(f"üéâ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: @{username} (ID: {user_id})")
    else:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–æ–≤.")


def register_greeting_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.message.register(command_start_handler, CommandStart())
    dp.message.register(handle_post_link)
