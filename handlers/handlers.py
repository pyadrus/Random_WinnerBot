# -*- coding: utf-8 -*-
import json
import random

from aiogram.filters import Command
from aiogram.filters import CommandStart
from aiogram.types import Message
from loguru import logger
from telethon import TelegramClient

from system.dispatcher import bot, dp


@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    logger.info(f"{message.from_user.id} {message.from_user.username} {message.from_user.first_name} "
                f"{message.from_user.last_name} {message.date.strftime("%Y-%m-%d %H:%M:%S")}")
    await bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å", disable_web_page_preview=True)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞
async def get_random_commenter(channel_id, message_id):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–∞ –ø–æ—Å—Ç–∞"""
    session_name = 'session_name'
    async with TelegramClient(f'setting/account/{session_name}', 12345, '0123456789abcdef0123456789abcdef') as client:
        await client.connect()
        logger.info(f'–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –∞–∫–∫–∞—É–Ω—Ç—É Telegram —Å –∏–º–µ–Ω–µ–º —Å–µ–∞–Ω—Å–∞ {session_name}')
        # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        commenters = []
        async for message in client.iter_messages(channel_id, reply_to=message_id, reverse=True):
            sender_id = message.from_id.user_id if message.from_id else None
            username = message.sender.username if message.sender else None
            logger.info(
                f"–ü–æ–ª—É—á–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {sender_id}, –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{username}")  # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            commenters.append((sender_id, username))
        await client.disconnect()  # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram
    return random.choice(commenters)


async def reading_json_file():
    """–ß—Ç–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞"""
    with open('config.json', 'r') as file:
        data = json.load(file)
    return data


@dp.message(Command('random_commenter'))
async def random_commenter_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /random_commenter"""
    data = await reading_json_file()
    channel_id = data['channel_id']
    post_id = data['post_id']

    random_commenter = await get_random_commenter(channel_id, post_id)
    if random_commenter:
        await message.reply(f"–°–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä: {random_commenter}")
    else:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–æ–≤.")


def register_greeting_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è –±–æ—Ç–∞"""
    dp.message.register(command_start_handler)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã
    dp.message.register(random_commenter_handler)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /random_comment
